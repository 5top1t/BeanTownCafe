version: '3.3'
services:

  # MongoDB Service 
  mongo:
    image: mongo
    container_name: book_db
    restart: unless-stopped
    ports:
      - 2717:27017
    tty: true
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootPassword
      - MONGO_INITDB_DATABASE=cscl
      - DB_USER=cscl
      - DB_PASS=mongo # Please note that password must match value in 'seed/1_initialize_user.js'
    volumes:
      - mongodb_data:/data/db
      - ./mongo/seed/:/docker-entrypoint-initdb.d/:ro
    networks:
      - caffe-network
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 150M
          
  # NodeJS Service
  node:
    image: "node:12"
    container_name: book_server
    restart: unless-stopped
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./server:/home/node/app
    ports:
      - 3000:3000
    links:
      - "mongo:database"
    command: "npm start"
    networks:
      - caffe-network
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.03"
          memory: 45M
          
  # ReactJS Service
  react:
    container_name: docker_client
    restart: unless-stopped
    build:
      context: ./client/
      dockerfile: Dockerfile
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - './client:/var/www'
      - '/var/www/node_modules'
    ports:
      - 3001:3001
    networks:
      - caffe-network
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.3"
          memory: 210M
  
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "3001:80"
      - "443:443"
    networks:
      - app-network

#Docker Networks
networks:
  caffe-network:
    driver: bridge

#Volumes
volumes:
  mongodb_data:
    driver_opts:
      type: none
      device: /Users/jarry/caffe-library/mongo/mongodb_data
      o: bind
